import React, { useState } from 'react';


{/*
组织路由结构：
  路由组允许开发者将相关的页面和功能模块组织在同一个目录下，从而创建出更加清晰和直观的项目结构。这种组织方式有助于提升项目的可维护性和可读性。
保持 URL 路径不变：
  在传统的文件系统路由中，文件位置的变动会直接影响到 URL 路径。而路由组的一个显著特点是，即使文件夹结构发生变化，只要路由组保持不变，映射后的 URL 路径也不会受到影响。这对于维护已发布的页面 URL 地址、保护网站的 SEO 友好性具有重要意义。
支持嵌套布局：
  路由组还可以与 App Router 提供的嵌套布局能力一同使用，允许开发者为路由组内的页面定义特定的布局。这进一步增强了路由的灵活性和可定制性。
 
URL 路径变动问题：
  在传统的路由设计中，如果页面文件的位置发生变化，那么对应的 URL 路径也会发生变化。这可能导致已发布的页面链接失效，对 SEO 产生负面影响。路由组通过保持 URL 路径不变，有效解决了这一问题。
项目结构清晰度问题：
  随着项目的不断发展，页面和功能模块的数量会逐渐增多。如果没有合理的组织方式，项目结构可能会变得混乱不堪。路由组通过允许开发者将相关的页面和功能模块组织在同一个目录下，提升了项目结构的清晰度和可读性。
路由灵活性问题：
  在某些情况下，开发者可能需要为不同的页面或功能模块定义不同的布局或样式。路由组支持嵌套布局的能力，使得开发者可以更加灵活地处理这类需求。
*/}
export default function LayoutDashboard({
    children,
  }: Readonly<{
    children: React.ReactNode;
  }>) {
    return (
      <main>
        路由组 页面  共享的layout
        {children}
      </main>
    );
  }
  